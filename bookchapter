#include <iostream>
using namespace std;

struct Node {
    char label[50];
    int count;
    Node* children[10];
};

class BookTree {
private:
    Node* root;

public:
    BookTree() {
        root = NULL;
    }

    void create() {
        root = new Node;
        cout << "Enter Book Name: ";
        cin >> root->label;

        cout << "Enter number of Chapters: ";
        cin >> root->count;

        for (int i = 0; i < root->count; i++) {
            root->children[i] = new Node;
            cout << "  Enter Chapter " << i + 1 << " Name: ";
            cin >> root->children[i]->label;

            cout << "  Enter number of Sections in Chapter: ";
            cin >> root->children[i]->count;

            for (int j = 0; j < root->children[i]->count; j++) {
                root->children[i]->children[j] = new Node;
                cout << "    Enter Section " << j + 1 << " Name: ";
                cin >> root->children[i]->children[j]->label;

                cout << "    Enter number of Subsections in Section: ";
                cin >> root->children[i]->children[j]->count;

                for (int k = 0; k < root->children[i]->children[j]->count; k++) {
                    root->children[i]->children[j]->children[k] = new Node;
                    cout << "      Enter Subsection " << k + 1 << " Name: ";
                    cin >> root->children[i]->children[j]->children[k]->label;
                }
            }
        }
    }

    void display(Node* node) {
        if (node == NULL) {
            cout << "Tree is empty.\n";
            return;
        }

        cout << "\nBook Title: " << node->label;

        for (int i = 0; i < node->count; i++) {
            Node* chapter = node->children[i];
            cout << "\n  Chapter " << i + 1 << ": " << chapter->label;

            for (int j = 0; j < chapter->count; j++) {
                Node* section = chapter->children[j];
                cout << "\n    Section " << j + 1 << ": " << section->label;

                for (int k = 0; k < section->count; k++) {
                    Node* subsection = section->children[k];
                    cout << "\n      Subsection " << k + 1 << ": " << subsection->label;
                }
            }
        }
        cout << endl;
    }

    Node* getRoot() {
        return root;
    }
};

int main() {
    BookTree book;
    int choice;

    while (true) {
        cout << "\nMenu:\n1. Create Book\n2. Display Book\n3. Exit\nEnter your choice: ";
        cin >> choice;

        switch (choice) {
            case 1:
                book.create();
                break;
            case 2:
                book.display(book.getRoot());
                break;
            case 3:
                return 0;
            default:
                cout << "Invalid choice. Try again.\n";
        }
    }
}
