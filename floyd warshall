#include<iostream>
#include<vector>
using namespace std;

class Solution{
public:
    void shortest_distance(vector<vector<int>>&matrix){
    int n=matrix.size();
    for(int i=0;i<n;i++){
        for(int j=0;j<n;j++){
           if(matrix[i][j]==-1){
              matrix[i][j]=1e9;
              }
              if(i==j){
              matrix[i][j]=0;
              }
          }
        }
        
        for(int k=0;k<n;k++){
           for(int i=0;i<n;i++){
             for(int j=0;j<n;j++){
               matrix[i][j]=min(matrix[i][j],matrix[i][k]+matrix[k][j]);
               }
            }
        }
        
       for(int i=0;i<n;i++){
        for(int j=0;j<n;j++){
           if(matrix[i][j]==1e9){
              matrix[i][j]=-1;
              }
          }
        }
    }
};
  
  int main(){
    int n;
    cout<<"enter the number of vertices"<<endl;
    cin>>n;
    
    vector<vector<int>>matrix(n,vector<int>(n));
    cout<<"Enter adjacency matrix:"<<endl;
    for(int i=0;i<n;i++){
        for(int j=0;j<n;j++){
           cin>>matrix[i][j];
          }
        }
        
    Solution obj;
    obj.shortest_distance(matrix);
    
    cout<<"the shortest distance"<<endl;
    for(int i=0;i<n;i++){
        for(int j=0;j<n;j++){
           cout<<matrix[i][j]<<" ";
          }
          cout<<endl;
        }
    return 0;
  }
